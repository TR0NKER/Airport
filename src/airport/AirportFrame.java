/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package airport;

import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.Color;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author edangulo
 */
public class AirportFrame extends javax.swing.JFrame {

    /**
     * Creates new form AirportFrame
     */
    private int x, y;
    private ArrayList<Passenger> passengers;
    private ArrayList<Plane> planes;
    private ArrayList<Location> locations;
    private ArrayList<Flight> flights;

    public AirportFrame() {
        initComponents();

        this.passengers = new ArrayList<>();
        this.planes = new ArrayList<>();
        this.locations = new ArrayList<>();
        this.flights = new ArrayList<>();

        this.setBackground(new Color(0, 0, 0, 0));
        this.setLocationRelativeTo(null);

        this.generateMonths();
        this.generateDays();
        this.generateHours();
        this.generateMinutes();
        this.blockPanels();
    }

    private void blockPanels() {
        //9, 11
        for (int i = 1; i < mainTab.getTabCount(); i++) {
            if (i != 9 && i != 11) {
                mainTab.setEnabledAt(i, false);
            }
        }
    }

    private void generateMonths() {
        for (int i = 1; i < 13; i++) {
            passengerRegistrationMonthBox.addItem("" + i);
            flightRegistrationMonthBox.addItem("" + i);
            updateInfoMonthBox.addItem("" + i);
        }
    }

    private void generateDays() {
        for (int i = 1; i < 32; i++) {
            passengerRegistrationDayBox.addItem("" + i);
            flightRegistrationDayBox.addItem("" + i);
            updateInfoDayBox.addItem("" + i);
        }
    }

    private void generateHours() {
        for (int i = 0; i < 24; i++) {
            flightRegistrationDepartureHourBox.addItem("" + i);
            flightRegistrationArrivalHourBox.addItem("" + i);
            flightRegistrationScaleHourBox.addItem("" + i);
            delayFlightsHourBox.addItem("" + i);
        }
    }

    private void generateMinutes() {
        for (int i = 0; i < 60; i++) {
            flightRegistrationDepartureMinuteBox.addItem("" + i);
            flightRegistrationArrivalMinuteBox.addItem("" + i);
            flightRegistrationScaleMinuteBox.addItem("" + i);
            delayFlightsMinuteBox.addItem("" + i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodyPanel = new airport.PanelRound();
        upperBodyPanel = new airport.PanelRound();
        jButton13 = new javax.swing.JButton();
        mainTab = new javax.swing.JTabbedPane();
        administrationPanel = new javax.swing.JPanel();
        user = new javax.swing.JRadioButton();
        administrator = new javax.swing.JRadioButton();
        userSelect = new javax.swing.JComboBox<>();
        passengerRegistrationPanel = new javax.swing.JPanel();
        passengerRegistrationCountrylabel = new javax.swing.JLabel();
        passengerRegistrationIDLabel = new javax.swing.JLabel();
        passengerRegistrationFirstNameLabel = new javax.swing.JLabel();
        passengerRegistrationLastNameLabel = new javax.swing.JLabel();
        passengerRegistrationBirthdate1Label = new javax.swing.JLabel();
        passengerRegistrationPhone2Label = new javax.swing.JLabel();
        passengerRegistrationPhone1TextField = new javax.swing.JTextField();
        passengerRegistrationIDTextField = new javax.swing.JTextField();
        passengerRegistrationYearTextField = new javax.swing.JTextField();
        passengerRegistrationCountryTextField = new javax.swing.JTextField();
        passengerRegistrationPhone2TextField = new javax.swing.JTextField();
        passengerRegistrationPhone1Label = new javax.swing.JLabel();
        passengerRegistrationBirthdate2Label = new javax.swing.JLabel();
        passengerRegistrationLastNameTextField = new javax.swing.JTextField();
        passengerRegistrationPhone3Label = new javax.swing.JLabel();
        passengerRegistrationMonthBox = new javax.swing.JComboBox<>();
        passengerRegistrationFirtstNameLabel = new javax.swing.JTextField();
        passengerRegistrationBirthdate3Label = new javax.swing.JLabel();
        passengerRegistrationDayBox = new javax.swing.JComboBox<>();
        passengerRegistrationRegisterButton = new javax.swing.JButton();
        airplaneRegistrationPanel = new javax.swing.JPanel();
        airplaneRegistrationIDLabel = new javax.swing.JLabel();
        airplaneRegistrationIDTextField = new javax.swing.JTextField();
        airplaneRegistrationBrandLabel = new javax.swing.JLabel();
        airplaneRegistrationBrandTextField = new javax.swing.JTextField();
        airplaneRegistrationModelTextField = new javax.swing.JTextField();
        airplaneRegistrationModelLabel = new javax.swing.JLabel();
        airplaneRegistrationMaxCapacityTextField = new javax.swing.JTextField();
        airplaneRegistrationMaxCapacityLabel = new javax.swing.JLabel();
        airplaneRegistrationAirlineTextField = new javax.swing.JTextField();
        airplaneRegistrationAirlineLabel = new javax.swing.JLabel();
        airplaneRegistrationCreateButton = new javax.swing.JButton();
        locationRegistrationPanel = new javax.swing.JPanel();
        locationRegistrationAirportIDLabel = new javax.swing.JLabel();
        locationRegistrationAirportIDTextField = new javax.swing.JTextField();
        locationRegistrationAirportNameLabel = new javax.swing.JLabel();
        locationRegistrationAirportNameTextField = new javax.swing.JTextField();
        locationRegistrationAirportCityTextField = new javax.swing.JTextField();
        locationRegistrationAirportCityLabel = new javax.swing.JLabel();
        locationRegistrationAirportCountryLabel = new javax.swing.JLabel();
        locationRegistrationAirportCountryTextField = new javax.swing.JTextField();
        locationRegistrationAirportLatitudeTextField = new javax.swing.JTextField();
        locationRegistrationAirportLatitudeLabel = new javax.swing.JLabel();
        locationRegistrationAirportLongitudeLabel = new javax.swing.JLabel();
        locationRegistrationAirportLongitudeTextField = new javax.swing.JTextField();
        locationRegistrationCreateButton = new javax.swing.JButton();
        flightRegistrationPanel = new javax.swing.JPanel();
        flightRegistrationIDLabel = new javax.swing.JLabel();
        flightRegistrationIDTextField = new javax.swing.JTextField();
        flightRegistrationPlaneLabel = new javax.swing.JLabel();
        flightRegistrationPlaneBox = new javax.swing.JComboBox<>();
        flightRegistrationDepartureLocationBox = new javax.swing.JComboBox<>();
        flightRegistrationDepartureLocationLabel = new javax.swing.JLabel();
        flightRegistrationArrivalLocationBox = new javax.swing.JComboBox<>();
        flightRegistrationArrivalLocationLabel = new javax.swing.JLabel();
        flightRegistrationScaleLocationLabel = new javax.swing.JLabel();
        flightRegistrationScaleLocationBox = new javax.swing.JComboBox<>();
        flightRegistrationScaleDuration1Label = new javax.swing.JLabel();
        flightRegistrationArrivalDuration1Label = new javax.swing.JLabel();
        flightRegistrationDepartureDate1Label = new javax.swing.JLabel();
        flightRegistrationYearTextField = new javax.swing.JTextField();
        flightRegistrationDepartureDate2Label = new javax.swing.JLabel();
        flightRegistrationMonthBox = new javax.swing.JComboBox<>();
        flightRegistrationDepartureDate3Label = new javax.swing.JLabel();
        flightRegistrationDayBox = new javax.swing.JComboBox<>();
        flightRegistrationDepartureDate4Label = new javax.swing.JLabel();
        flightRegistrationDepartureHourBox = new javax.swing.JComboBox<>();
        flightRegistrationDepartureDate5Label = new javax.swing.JLabel();
        flightRegistrationDepartureMinuteBox = new javax.swing.JComboBox<>();
        flightRegistrationArrivalHourBox = new javax.swing.JComboBox<>();
        flightRegistrationArrivalDuration2Label = new javax.swing.JLabel();
        flightRegistrationArrivalMinuteBox = new javax.swing.JComboBox<>();
        flightRegistrationScaleDuration2Label = new javax.swing.JLabel();
        flightRegistrationScaleHourBox = new javax.swing.JComboBox<>();
        flightRegistrationScaleMinuteBox = new javax.swing.JComboBox<>();
        flightRegistrationCreateButton = new javax.swing.JButton();
        updateInfoPanel = new javax.swing.JPanel();
        updateInfoIDLabel = new javax.swing.JLabel();
        updateInfoIDTextField = new javax.swing.JTextField();
        updateInfoFirstNameLabel = new javax.swing.JLabel();
        updateInfoFirstNameTextField = new javax.swing.JTextField();
        updateInfoLastNameLabel = new javax.swing.JLabel();
        updateInfoLastNameTextField = new javax.swing.JTextField();
        updateInfoBirthdateLabel = new javax.swing.JLabel();
        updateInfoYearTextField = new javax.swing.JTextField();
        updateInfoMonthBox = new javax.swing.JComboBox<>();
        updateInfoDayBox = new javax.swing.JComboBox<>();
        updateInfoPhone2TextField = new javax.swing.JTextField();
        updateInfoPhone3Label = new javax.swing.JLabel();
        updateInfoPhone1TextField = new javax.swing.JTextField();
        updateInfoPhone2Label = new javax.swing.JLabel();
        updateInfoPhone1Label = new javax.swing.JLabel();
        updateInfoCountryLabel = new javax.swing.JLabel();
        updateInfoCountryTextField = new javax.swing.JTextField();
        updateInfoUpdateButton = new javax.swing.JButton();
        addToFlightPanel = new javax.swing.JPanel();
        addToFlightIDTextField = new javax.swing.JTextField();
        addToFlightIDLabel = new javax.swing.JLabel();
        addToFlightFlightLabel = new javax.swing.JLabel();
        addToFlightFlightBox = new javax.swing.JComboBox<>();
        addToFlightAddButton = new javax.swing.JButton();
        showMyFlightsPanel = new javax.swing.JPanel();
        showMyFlightsScroll = new javax.swing.JScrollPane();
        showMyFlightsTable = new javax.swing.JTable();
        showMyFlightsRefreshButton = new javax.swing.JButton();
        showAllPassengersPanel = new javax.swing.JPanel();
        showAllPassengersScroll = new javax.swing.JScrollPane();
        showAllPassengersTable = new javax.swing.JTable();
        showAllPassengersRefreshButton = new javax.swing.JButton();
        showAllFlightsPanel = new javax.swing.JPanel();
        showAllFlightsScroll = new javax.swing.JScrollPane();
        showAllFlightsTable = new javax.swing.JTable();
        showAllFlightsRefreshButton = new javax.swing.JButton();
        showAllPlanesPanel = new javax.swing.JPanel();
        showAllPlanesRefreshButton = new javax.swing.JButton();
        showAllPlanesScroll = new javax.swing.JScrollPane();
        showAllPlanesTable = new javax.swing.JTable();
        showAllLocationsPanel = new javax.swing.JPanel();
        showAllLocationsScroll = new javax.swing.JScrollPane();
        showAllLocationsTable = new javax.swing.JTable();
        showAllLocationsRefreshButton = new javax.swing.JButton();
        delayFlightsPanel = new javax.swing.JPanel();
        delayFlightsHourBox = new javax.swing.JComboBox<>();
        delayFlightsHoursLabel = new javax.swing.JLabel();
        delayFlightsIDLabel = new javax.swing.JLabel();
        delayFlightsIDBox = new javax.swing.JComboBox<>();
        delayFlightsMinutesLabel = new javax.swing.JLabel();
        delayFlightsMinuteBox = new javax.swing.JComboBox<>();
        delayFlightsDelayButton = new javax.swing.JButton();
        lowerBodyPanel = new airport.PanelRound();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        bodyPanel.setRadius(40);
        bodyPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        upperBodyPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                upperBodyPanelMouseDragged(evt);
            }
        });
        upperBodyPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                upperBodyPanelMousePressed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButton13.setText("X");
        jButton13.setBorderPainted(false);
        jButton13.setContentAreaFilled(false);
        jButton13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout upperBodyPanelLayout = new javax.swing.GroupLayout(upperBodyPanel);
        upperBodyPanel.setLayout(upperBodyPanelLayout);
        upperBodyPanelLayout.setHorizontalGroup(
            upperBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, upperBodyPanelLayout.createSequentialGroup()
                .addContainerGap(1083, Short.MAX_VALUE)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        upperBodyPanelLayout.setVerticalGroup(
            upperBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upperBodyPanelLayout.createSequentialGroup()
                .addComponent(jButton13)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        bodyPanel.add(upperBodyPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, -1));

        mainTab.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N

        administrationPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        user.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        user.setText("User");
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });
        administrationPanel.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, -1, -1));

        administrator.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        administrator.setText("Administrator");
        administrator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administratorActionPerformed(evt);
            }
        });
        administrationPanel.add(administrator, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 164, -1, -1));

        userSelect.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        userSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select User" }));
        userSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSelectActionPerformed(evt);
            }
        });
        administrationPanel.add(userSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 130, -1));

        mainTab.addTab("Administration", administrationPanel);

        passengerRegistrationPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        passengerRegistrationCountrylabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationCountrylabel.setText("Country:");
        passengerRegistrationPanel.add(passengerRegistrationCountrylabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, -1, -1));

        passengerRegistrationIDLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationIDLabel.setText("ID:");
        passengerRegistrationPanel.add(passengerRegistrationIDLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        passengerRegistrationFirstNameLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationFirstNameLabel.setText("First Name:");
        passengerRegistrationPanel.add(passengerRegistrationFirstNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        passengerRegistrationLastNameLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationLastNameLabel.setText("Last Name:");
        passengerRegistrationPanel.add(passengerRegistrationLastNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        passengerRegistrationBirthdate1Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationBirthdate1Label.setText("Birthdate:");
        passengerRegistrationPanel.add(passengerRegistrationBirthdate1Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        passengerRegistrationPhone2Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationPhone2Label.setText("+");
        passengerRegistrationPanel.add(passengerRegistrationPhone2Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 20, -1));

        passengerRegistrationPhone1TextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationPanel.add(passengerRegistrationPhone1TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 50, -1));

        passengerRegistrationIDTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationPanel.add(passengerRegistrationIDTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 130, -1));

        passengerRegistrationYearTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationPanel.add(passengerRegistrationYearTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 90, -1));

        passengerRegistrationCountryTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationPanel.add(passengerRegistrationCountryTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 130, -1));

        passengerRegistrationPhone2TextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationPanel.add(passengerRegistrationPhone2TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 130, -1));

        passengerRegistrationPhone1Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationPhone1Label.setText("Phone:");
        passengerRegistrationPanel.add(passengerRegistrationPhone1Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        passengerRegistrationBirthdate2Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationBirthdate2Label.setText("-");
        passengerRegistrationPanel.add(passengerRegistrationBirthdate2Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 30, -1));

        passengerRegistrationLastNameTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationPanel.add(passengerRegistrationLastNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 130, -1));

        passengerRegistrationPhone3Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationPhone3Label.setText("-");
        passengerRegistrationPanel.add(passengerRegistrationPhone3Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 30, -1));

        passengerRegistrationMonthBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationMonthBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));
        passengerRegistrationPanel.add(passengerRegistrationMonthBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, -1, -1));

        passengerRegistrationFirtstNameLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationPanel.add(passengerRegistrationFirtstNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 130, -1));

        passengerRegistrationBirthdate3Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationBirthdate3Label.setText("-");
        passengerRegistrationPanel.add(passengerRegistrationBirthdate3Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 280, 30, -1));

        passengerRegistrationDayBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationDayBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));
        passengerRegistrationPanel.add(passengerRegistrationDayBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, -1, -1));

        passengerRegistrationRegisterButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegistrationRegisterButton.setText("Register");
        passengerRegistrationRegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passengerRegistrationRegisterButtonActionPerformed(evt);
            }
        });
        passengerRegistrationPanel.add(passengerRegistrationRegisterButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, -1, -1));

        mainTab.addTab("Passenger registration", passengerRegistrationPanel);

        airplaneRegistrationPanel.setLayout(null);

        airplaneRegistrationIDLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegistrationIDLabel.setText("ID:");
        airplaneRegistrationPanel.add(airplaneRegistrationIDLabel);
        airplaneRegistrationIDLabel.setBounds(53, 96, 22, 25);

        airplaneRegistrationIDTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegistrationPanel.add(airplaneRegistrationIDTextField);
        airplaneRegistrationIDTextField.setBounds(180, 93, 130, 31);

        airplaneRegistrationBrandLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegistrationBrandLabel.setText("Brand:");
        airplaneRegistrationPanel.add(airplaneRegistrationBrandLabel);
        airplaneRegistrationBrandLabel.setBounds(53, 157, 60, 25);

        airplaneRegistrationBrandTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegistrationPanel.add(airplaneRegistrationBrandTextField);
        airplaneRegistrationBrandTextField.setBounds(180, 154, 130, 31);

        airplaneRegistrationModelTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegistrationPanel.add(airplaneRegistrationModelTextField);
        airplaneRegistrationModelTextField.setBounds(180, 213, 130, 31);

        airplaneRegistrationModelLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegistrationModelLabel.setText("Model:");
        airplaneRegistrationPanel.add(airplaneRegistrationModelLabel);
        airplaneRegistrationModelLabel.setBounds(53, 216, 60, 25);

        airplaneRegistrationMaxCapacityTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegistrationPanel.add(airplaneRegistrationMaxCapacityTextField);
        airplaneRegistrationMaxCapacityTextField.setBounds(180, 273, 130, 31);

        airplaneRegistrationMaxCapacityLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegistrationMaxCapacityLabel.setText("Max Capacity:");
        airplaneRegistrationPanel.add(airplaneRegistrationMaxCapacityLabel);
        airplaneRegistrationMaxCapacityLabel.setBounds(53, 276, 120, 25);

        airplaneRegistrationAirlineTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegistrationPanel.add(airplaneRegistrationAirlineTextField);
        airplaneRegistrationAirlineTextField.setBounds(180, 333, 130, 31);

        airplaneRegistrationAirlineLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegistrationAirlineLabel.setText("Airline:");
        airplaneRegistrationPanel.add(airplaneRegistrationAirlineLabel);
        airplaneRegistrationAirlineLabel.setBounds(53, 336, 70, 25);

        airplaneRegistrationCreateButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegistrationCreateButton.setText("Create");
        airplaneRegistrationCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                airplaneRegistrationCreateButtonActionPerformed(evt);
            }
        });
        airplaneRegistrationPanel.add(airplaneRegistrationCreateButton);
        airplaneRegistrationCreateButton.setBounds(490, 480, 120, 40);

        mainTab.addTab("Airplane registration", airplaneRegistrationPanel);

        locationRegistrationAirportIDLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        locationRegistrationAirportIDLabel.setText("Airport ID:");

        locationRegistrationAirportIDTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        locationRegistrationAirportNameLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        locationRegistrationAirportNameLabel.setText("Airport name:");

        locationRegistrationAirportNameTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        locationRegistrationAirportCityTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        locationRegistrationAirportCityLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        locationRegistrationAirportCityLabel.setText("Airport city:");

        locationRegistrationAirportCountryLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        locationRegistrationAirportCountryLabel.setText("Airport country:");

        locationRegistrationAirportCountryTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        locationRegistrationAirportLatitudeTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        locationRegistrationAirportLatitudeLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        locationRegistrationAirportLatitudeLabel.setText("Airport latitude:");

        locationRegistrationAirportLongitudeLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        locationRegistrationAirportLongitudeLabel.setText("Airport longitude:");

        locationRegistrationAirportLongitudeTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        locationRegistrationCreateButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        locationRegistrationCreateButton.setText("Create");
        locationRegistrationCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationRegistrationCreateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout locationRegistrationPanelLayout = new javax.swing.GroupLayout(locationRegistrationPanel);
        locationRegistrationPanel.setLayout(locationRegistrationPanelLayout);
        locationRegistrationPanelLayout.setHorizontalGroup(
            locationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(locationRegistrationPanelLayout.createSequentialGroup()
                .addGroup(locationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(locationRegistrationPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(locationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(locationRegistrationAirportIDLabel)
                            .addComponent(locationRegistrationAirportNameLabel)
                            .addComponent(locationRegistrationAirportCityLabel)
                            .addComponent(locationRegistrationAirportCountryLabel)
                            .addComponent(locationRegistrationAirportLatitudeLabel)
                            .addComponent(locationRegistrationAirportLongitudeLabel))
                        .addGap(80, 80, 80)
                        .addGroup(locationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(locationRegistrationAirportLongitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(locationRegistrationAirportIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(locationRegistrationAirportNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(locationRegistrationAirportCityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(locationRegistrationAirportCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(locationRegistrationAirportLatitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(locationRegistrationPanelLayout.createSequentialGroup()
                        .addGap(515, 515, 515)
                        .addComponent(locationRegistrationCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(515, 515, 515))
        );
        locationRegistrationPanelLayout.setVerticalGroup(
            locationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(locationRegistrationPanelLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(locationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(locationRegistrationPanelLayout.createSequentialGroup()
                        .addComponent(locationRegistrationAirportIDLabel)
                        .addGap(36, 36, 36)
                        .addComponent(locationRegistrationAirportNameLabel)
                        .addGap(34, 34, 34)
                        .addComponent(locationRegistrationAirportCityLabel)
                        .addGap(35, 35, 35)
                        .addComponent(locationRegistrationAirportCountryLabel)
                        .addGap(35, 35, 35)
                        .addComponent(locationRegistrationAirportLatitudeLabel))
                    .addGroup(locationRegistrationPanelLayout.createSequentialGroup()
                        .addComponent(locationRegistrationAirportIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(locationRegistrationAirportNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(locationRegistrationAirportCityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(locationRegistrationAirportCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(locationRegistrationAirportLatitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(locationRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationRegistrationAirportLongitudeLabel)
                    .addComponent(locationRegistrationAirportLongitudeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(locationRegistrationCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        mainTab.addTab("Location registration", locationRegistrationPanel);

        flightRegistrationIDLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationIDLabel.setText("ID:");

        flightRegistrationIDTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        flightRegistrationPlaneLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationPlaneLabel.setText("Plane:");

        flightRegistrationPlaneBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationPlaneBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plane" }));

        flightRegistrationDepartureLocationBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationDepartureLocationBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        flightRegistrationDepartureLocationLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationDepartureLocationLabel.setText("Departure location:");

        flightRegistrationArrivalLocationBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationArrivalLocationBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        flightRegistrationArrivalLocationLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationArrivalLocationLabel.setText("Arrival location:");

        flightRegistrationScaleLocationLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationScaleLocationLabel.setText("Scale location:");

        flightRegistrationScaleLocationBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationScaleLocationBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        flightRegistrationScaleDuration1Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationScaleDuration1Label.setText("Duration:");

        flightRegistrationArrivalDuration1Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationArrivalDuration1Label.setText("Duration:");

        flightRegistrationDepartureDate1Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationDepartureDate1Label.setText("Departure date:");

        flightRegistrationYearTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        flightRegistrationDepartureDate2Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationDepartureDate2Label.setText("-");

        flightRegistrationMonthBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationMonthBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        flightRegistrationDepartureDate3Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationDepartureDate3Label.setText("-");

        flightRegistrationDayBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationDayBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        flightRegistrationDepartureDate4Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationDepartureDate4Label.setText("-");

        flightRegistrationDepartureHourBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationDepartureHourBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        flightRegistrationDepartureDate5Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationDepartureDate5Label.setText("-");

        flightRegistrationDepartureMinuteBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationDepartureMinuteBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        flightRegistrationArrivalHourBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationArrivalHourBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        flightRegistrationArrivalDuration2Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationArrivalDuration2Label.setText("-");

        flightRegistrationArrivalMinuteBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationArrivalMinuteBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        flightRegistrationScaleDuration2Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationScaleDuration2Label.setText("-");

        flightRegistrationScaleHourBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationScaleHourBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        flightRegistrationScaleMinuteBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationScaleMinuteBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        flightRegistrationCreateButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightRegistrationCreateButton.setText("Create");
        flightRegistrationCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightRegistrationCreateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout flightRegistrationPanelLayout = new javax.swing.GroupLayout(flightRegistrationPanel);
        flightRegistrationPanel.setLayout(flightRegistrationPanelLayout);
        flightRegistrationPanelLayout.setHorizontalGroup(
            flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                        .addComponent(flightRegistrationScaleLocationLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(flightRegistrationScaleLocationBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flightRegistrationPanelLayout.createSequentialGroup()
                        .addComponent(flightRegistrationArrivalLocationLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(flightRegistrationArrivalLocationBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                        .addComponent(flightRegistrationDepartureLocationLabel)
                        .addGap(46, 46, 46)
                        .addComponent(flightRegistrationDepartureLocationBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                        .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(flightRegistrationIDLabel)
                            .addComponent(flightRegistrationPlaneLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(flightRegistrationIDTextField)
                            .addComponent(flightRegistrationPlaneBox, 0, 130, Short.MAX_VALUE))))
                .addGap(45, 45, 45)
                .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(flightRegistrationScaleDuration1Label)
                    .addComponent(flightRegistrationArrivalDuration1Label)
                    .addComponent(flightRegistrationDepartureDate1Label))
                .addGap(18, 18, 18)
                .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                        .addComponent(flightRegistrationYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(flightRegistrationMonthBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(flightRegistrationDepartureDate2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(flightRegistrationDepartureDate3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(flightRegistrationDayBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(flightRegistrationDepartureHourBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(flightRegistrationDepartureDate4Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(flightRegistrationDepartureDate5Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(flightRegistrationDepartureMinuteBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))
                    .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                        .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                                .addComponent(flightRegistrationArrivalHourBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(flightRegistrationArrivalDuration2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(flightRegistrationArrivalMinuteBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                                .addComponent(flightRegistrationScaleHourBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(flightRegistrationScaleDuration2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(flightRegistrationScaleMinuteBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flightRegistrationPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(flightRegistrationCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(530, 530, 530))
        );
        flightRegistrationPanelLayout.setVerticalGroup(
            flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(flightRegistrationIDLabel))
                    .addComponent(flightRegistrationIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flightRegistrationPlaneLabel)
                    .addComponent(flightRegistrationPlaneBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(flightRegistrationDepartureHourBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flightRegistrationDepartureDate4Label)
                    .addComponent(flightRegistrationDepartureDate5Label)
                    .addComponent(flightRegistrationDepartureMinuteBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(flightRegistrationPanelLayout.createSequentialGroup()
                        .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(flightRegistrationDepartureLocationLabel)
                                .addComponent(flightRegistrationDepartureLocationBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(flightRegistrationDepartureDate1Label))
                            .addComponent(flightRegistrationYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(flightRegistrationMonthBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(flightRegistrationDepartureDate2Label)
                            .addComponent(flightRegistrationDepartureDate3Label)
                            .addComponent(flightRegistrationDayBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(flightRegistrationArrivalLocationLabel)
                                .addComponent(flightRegistrationArrivalLocationBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(flightRegistrationArrivalDuration1Label))
                            .addComponent(flightRegistrationArrivalHourBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(flightRegistrationArrivalDuration2Label)
                            .addComponent(flightRegistrationArrivalMinuteBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(flightRegistrationScaleHourBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(flightRegistrationScaleDuration2Label)
                            .addComponent(flightRegistrationScaleMinuteBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(flightRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(flightRegistrationScaleLocationLabel)
                                .addComponent(flightRegistrationScaleLocationBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(flightRegistrationScaleDuration1Label)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(flightRegistrationCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        mainTab.addTab("Flight registration", flightRegistrationPanel);

        updateInfoIDLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateInfoIDLabel.setText("ID:");

        updateInfoIDTextField.setEditable(false);
        updateInfoIDTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateInfoIDTextField.setEnabled(false);

        updateInfoFirstNameLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateInfoFirstNameLabel.setText("First Name:");

        updateInfoFirstNameTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        updateInfoLastNameLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateInfoLastNameLabel.setText("Last Name:");

        updateInfoLastNameTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        updateInfoBirthdateLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateInfoBirthdateLabel.setText("Birthdate:");

        updateInfoYearTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        updateInfoMonthBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateInfoMonthBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        updateInfoDayBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateInfoDayBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        updateInfoPhone2TextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        updateInfoPhone3Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateInfoPhone3Label.setText("-");

        updateInfoPhone1TextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        updateInfoPhone2Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateInfoPhone2Label.setText("+");

        updateInfoPhone1Label.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateInfoPhone1Label.setText("Phone:");

        updateInfoCountryLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateInfoCountryLabel.setText("Country:");

        updateInfoCountryTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        updateInfoUpdateButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateInfoUpdateButton.setText("Update");
        updateInfoUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateInfoUpdateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateInfoPanelLayout = new javax.swing.GroupLayout(updateInfoPanel);
        updateInfoPanel.setLayout(updateInfoPanelLayout);
        updateInfoPanelLayout.setHorizontalGroup(
            updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateInfoPanelLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                                .addComponent(updateInfoIDLabel)
                                .addGap(108, 108, 108)
                                .addComponent(updateInfoIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                                .addComponent(updateInfoFirstNameLabel)
                                .addGap(41, 41, 41)
                                .addComponent(updateInfoFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                                .addComponent(updateInfoLastNameLabel)
                                .addGap(43, 43, 43)
                                .addComponent(updateInfoLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                                .addComponent(updateInfoBirthdateLabel)
                                .addGap(55, 55, 55)
                                .addComponent(updateInfoYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(updateInfoMonthBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(updateInfoDayBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                                .addComponent(updateInfoPhone1Label)
                                .addGap(56, 56, 56)
                                .addComponent(updateInfoPhone2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(updateInfoPhone1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(updateInfoPhone3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(updateInfoPhone2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                                .addComponent(updateInfoCountryLabel)
                                .addGap(63, 63, 63)
                                .addComponent(updateInfoCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(updateInfoPanelLayout.createSequentialGroup()
                        .addGap(507, 507, 507)
                        .addComponent(updateInfoUpdateButton)))
                .addContainerGap(552, Short.MAX_VALUE))
        );
        updateInfoPanelLayout.setVerticalGroup(
            updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateInfoIDLabel)
                    .addComponent(updateInfoIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateInfoFirstNameLabel)
                    .addComponent(updateInfoFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateInfoLastNameLabel)
                    .addComponent(updateInfoLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateInfoBirthdateLabel)
                    .addComponent(updateInfoYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateInfoMonthBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateInfoDayBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateInfoPhone1Label)
                    .addComponent(updateInfoPhone2Label)
                    .addComponent(updateInfoPhone1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateInfoPhone3Label)
                    .addComponent(updateInfoPhone2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateInfoCountryLabel)
                    .addComponent(updateInfoCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(updateInfoUpdateButton)
                .addGap(113, 113, 113))
        );

        mainTab.addTab("Update info", updateInfoPanel);

        addToFlightIDTextField.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        addToFlightIDTextField.setEnabled(false);

        addToFlightIDLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        addToFlightIDLabel.setText("ID:");

        addToFlightFlightLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        addToFlightFlightLabel.setText("Flight:");

        addToFlightFlightBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        addToFlightFlightBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Flight" }));

        addToFlightAddButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        addToFlightAddButton.setText("Add");
        addToFlightAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToFlightAddButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addToFlightPanelLayout = new javax.swing.GroupLayout(addToFlightPanel);
        addToFlightPanel.setLayout(addToFlightPanelLayout);
        addToFlightPanelLayout.setHorizontalGroup(
            addToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addToFlightPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(addToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addToFlightIDLabel)
                    .addComponent(addToFlightFlightLabel))
                .addGap(79, 79, 79)
                .addGroup(addToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addToFlightFlightBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addToFlightIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(827, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addToFlightPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addToFlightAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(509, 509, 509))
        );
        addToFlightPanelLayout.setVerticalGroup(
            addToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addToFlightPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(addToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addToFlightPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(addToFlightIDLabel))
                    .addComponent(addToFlightIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(addToFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addToFlightFlightLabel)
                    .addComponent(addToFlightFlightBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, Short.MAX_VALUE)
                .addComponent(addToFlightAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );

        mainTab.addTab("Add to flight", addToFlightPanel);

        showMyFlightsTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        showMyFlightsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Departure Date", "Arrival Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        showMyFlightsScroll.setViewportView(showMyFlightsTable);

        showMyFlightsRefreshButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        showMyFlightsRefreshButton.setText("Refresh");
        showMyFlightsRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showMyFlightsRefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout showMyFlightsPanelLayout = new javax.swing.GroupLayout(showMyFlightsPanel);
        showMyFlightsPanel.setLayout(showMyFlightsPanelLayout);
        showMyFlightsPanelLayout.setHorizontalGroup(
            showMyFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showMyFlightsPanelLayout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(showMyFlightsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(291, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, showMyFlightsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(showMyFlightsRefreshButton)
                .addGap(527, 527, 527))
        );
        showMyFlightsPanelLayout.setVerticalGroup(
            showMyFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showMyFlightsPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(showMyFlightsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(showMyFlightsRefreshButton)
                .addContainerGap())
        );

        mainTab.addTab("Show my flights", showMyFlightsPanel);

        showAllPassengersTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        showAllPassengersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Birthdate", "Age", "Phone", "Country", "Num Flight"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        showAllPassengersScroll.setViewportView(showAllPassengersTable);

        showAllPassengersRefreshButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        showAllPassengersRefreshButton.setText("Refresh");
        showAllPassengersRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllPassengersRefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout showAllPassengersPanelLayout = new javax.swing.GroupLayout(showAllPassengersPanel);
        showAllPassengersPanel.setLayout(showAllPassengersPanelLayout);
        showAllPassengersPanelLayout.setHorizontalGroup(
            showAllPassengersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showAllPassengersPanelLayout.createSequentialGroup()
                .addGroup(showAllPassengersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(showAllPassengersPanelLayout.createSequentialGroup()
                        .addGap(489, 489, 489)
                        .addComponent(showAllPassengersRefreshButton))
                    .addGroup(showAllPassengersPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(showAllPassengersScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 1078, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        showAllPassengersPanelLayout.setVerticalGroup(
            showAllPassengersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, showAllPassengersPanelLayout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addComponent(showAllPassengersScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(showAllPassengersRefreshButton)
                .addContainerGap())
        );

        mainTab.addTab("Show all passengers", showAllPassengersPanel);

        showAllFlightsTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        showAllFlightsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Departure Airport ID", "Arrival Airport ID", "Scale Airport ID", "Departure Date", "Arrival Date", "Plane ID", "Number Passengers"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        showAllFlightsScroll.setViewportView(showAllFlightsTable);

        showAllFlightsRefreshButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        showAllFlightsRefreshButton.setText("Refresh");
        showAllFlightsRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllFlightsRefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout showAllFlightsPanelLayout = new javax.swing.GroupLayout(showAllFlightsPanel);
        showAllFlightsPanel.setLayout(showAllFlightsPanelLayout);
        showAllFlightsPanelLayout.setHorizontalGroup(
            showAllFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showAllFlightsPanelLayout.createSequentialGroup()
                .addGroup(showAllFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(showAllFlightsPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(showAllFlightsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(showAllFlightsPanelLayout.createSequentialGroup()
                        .addGap(521, 521, 521)
                        .addComponent(showAllFlightsRefreshButton)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        showAllFlightsPanelLayout.setVerticalGroup(
            showAllFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showAllFlightsPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(showAllFlightsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(showAllFlightsRefreshButton)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        mainTab.addTab("Show all flights", showAllFlightsPanel);

        showAllPlanesRefreshButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        showAllPlanesRefreshButton.setText("Refresh");
        showAllPlanesRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllPlanesRefreshButtonActionPerformed(evt);
            }
        });

        showAllPlanesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Brand", "Model", "Max Capacity", "Airline", "Number Flights"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        showAllPlanesScroll.setViewportView(showAllPlanesTable);

        javax.swing.GroupLayout showAllPlanesPanelLayout = new javax.swing.GroupLayout(showAllPlanesPanel);
        showAllPlanesPanel.setLayout(showAllPlanesPanelLayout);
        showAllPlanesPanelLayout.setHorizontalGroup(
            showAllPlanesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showAllPlanesPanelLayout.createSequentialGroup()
                .addGroup(showAllPlanesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(showAllPlanesPanelLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(showAllPlanesRefreshButton))
                    .addGroup(showAllPlanesPanelLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(showAllPlanesScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        showAllPlanesPanelLayout.setVerticalGroup(
            showAllPlanesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, showAllPlanesPanelLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(showAllPlanesScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(showAllPlanesRefreshButton)
                .addGap(17, 17, 17))
        );

        mainTab.addTab("Show all planes", showAllPlanesPanel);

        showAllLocationsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airport ID", "Airport Name", "City", "Country"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        showAllLocationsScroll.setViewportView(showAllLocationsTable);

        showAllLocationsRefreshButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        showAllLocationsRefreshButton.setText("Refresh");
        showAllLocationsRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllLocationsRefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout showAllLocationsPanelLayout = new javax.swing.GroupLayout(showAllLocationsPanel);
        showAllLocationsPanel.setLayout(showAllLocationsPanelLayout);
        showAllLocationsPanelLayout.setHorizontalGroup(
            showAllLocationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showAllLocationsPanelLayout.createSequentialGroup()
                .addGroup(showAllLocationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(showAllLocationsPanelLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(showAllLocationsRefreshButton))
                    .addGroup(showAllLocationsPanelLayout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(showAllLocationsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(272, Short.MAX_VALUE))
        );
        showAllLocationsPanelLayout.setVerticalGroup(
            showAllLocationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, showAllLocationsPanelLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(showAllLocationsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(showAllLocationsRefreshButton)
                .addGap(17, 17, 17))
        );

        mainTab.addTab("Show all locations", showAllLocationsPanel);

        delayFlightsHourBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        delayFlightsHourBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        delayFlightsHoursLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        delayFlightsHoursLabel.setText("Hours:");

        delayFlightsIDLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        delayFlightsIDLabel.setText("ID:");

        delayFlightsIDBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        delayFlightsIDBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID" }));

        delayFlightsMinutesLabel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        delayFlightsMinutesLabel.setText("Minutes:");

        delayFlightsMinuteBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        delayFlightsMinuteBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        delayFlightsDelayButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        delayFlightsDelayButton.setText("Delay");
        delayFlightsDelayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delayFlightsDelayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout delayFlightsPanelLayout = new javax.swing.GroupLayout(delayFlightsPanel);
        delayFlightsPanel.setLayout(delayFlightsPanelLayout);
        delayFlightsPanelLayout.setHorizontalGroup(
            delayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(delayFlightsPanelLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(delayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(delayFlightsPanelLayout.createSequentialGroup()
                        .addComponent(delayFlightsMinutesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delayFlightsMinuteBox, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(delayFlightsPanelLayout.createSequentialGroup()
                        .addGroup(delayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(delayFlightsIDLabel)
                            .addComponent(delayFlightsHoursLabel))
                        .addGap(79, 79, 79)
                        .addGroup(delayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(delayFlightsHourBox, 0, 105, Short.MAX_VALUE)
                            .addComponent(delayFlightsIDBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(820, 820, 820))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, delayFlightsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(delayFlightsDelayButton)
                .addGap(531, 531, 531))
        );
        delayFlightsPanelLayout.setVerticalGroup(
            delayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(delayFlightsPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(delayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delayFlightsIDLabel)
                    .addComponent(delayFlightsIDBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(delayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delayFlightsHoursLabel)
                    .addComponent(delayFlightsHourBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(delayFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delayFlightsMinutesLabel)
                    .addComponent(delayFlightsMinuteBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addComponent(delayFlightsDelayButton)
                .addGap(33, 33, 33))
        );

        mainTab.addTab("Delay flight", delayFlightsPanel);

        bodyPanel.add(mainTab, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 41, 1150, 620));

        javax.swing.GroupLayout lowerBodyPanelLayout = new javax.swing.GroupLayout(lowerBodyPanel);
        lowerBodyPanel.setLayout(lowerBodyPanelLayout);
        lowerBodyPanelLayout.setHorizontalGroup(
            lowerBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1150, Short.MAX_VALUE)
        );
        lowerBodyPanelLayout.setVerticalGroup(
            lowerBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        bodyPanel.add(lowerBodyPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 660, 1150, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void upperBodyPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upperBodyPanelMousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_upperBodyPanelMousePressed

    private void upperBodyPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upperBodyPanelMouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_upperBodyPanelMouseDragged

    private void administratorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administratorActionPerformed
        if (user.isSelected()) {
            user.setSelected(false);
            userSelect.setSelectedIndex(0);

        }
        for (int i = 1; i < mainTab.getTabCount(); i++) {
                mainTab.setEnabledAt(i, true);
        }
        mainTab.setEnabledAt(5, false);
        mainTab.setEnabledAt(6, false);
    }//GEN-LAST:event_administratorActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        if (administrator.isSelected()) {
            administrator.setSelected(false);
        }
        for (int i = 1; i < mainTab.getTabCount(); i++) {

            mainTab.setEnabledAt(i, false);

        }
        mainTab.setEnabledAt(9, true);
        mainTab.setEnabledAt(5, true);
        mainTab.setEnabledAt(6, true);
        mainTab.setEnabledAt(7, true);
        mainTab.setEnabledAt(11, true);
    }//GEN-LAST:event_userActionPerformed

    private void passengerRegistrationRegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passengerRegistrationRegisterButtonActionPerformed
        // TODO add your handling code here:
        long id = Long.parseLong(passengerRegistrationIDTextField.getText());
        String firstname = passengerRegistrationFirtstNameLabel.getText();
        String lastname = passengerRegistrationLastNameTextField.getText();
        int year = Integer.parseInt(passengerRegistrationYearTextField.getText());
        int month = Integer.parseInt(passengerRegistrationMonthBox.getItemAt(passengerRegistrationMonthBox.getSelectedIndex()));
        int day = Integer.parseInt(passengerRegistrationDayBox.getItemAt(passengerRegistrationDayBox.getSelectedIndex()));
        int phoneCode = Integer.parseInt(passengerRegistrationPhone1TextField.getText());
        long phone = Long.parseLong(passengerRegistrationPhone2TextField.getText());
        String country = passengerRegistrationCountryTextField.getText();

        LocalDate birthDate = LocalDate.of(year, month, day);

        this.passengers.add(new Passenger(id, firstname, lastname, birthDate, phoneCode, phone, country));
        this.userSelect.addItem("" + id);
    }//GEN-LAST:event_passengerRegistrationRegisterButtonActionPerformed

    private void airplaneRegistrationCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_airplaneRegistrationCreateButtonActionPerformed
        // TODO add your handling code here:
        String id = airplaneRegistrationIDTextField.getText();
        String brand = airplaneRegistrationBrandTextField.getText();
        String model = airplaneRegistrationModelTextField.getText();
        int maxCapacity = Integer.parseInt(airplaneRegistrationMaxCapacityTextField.getText());
        String airline = airplaneRegistrationAirlineTextField.getText();

        this.planes.add(new Plane(id, brand, model, maxCapacity, airline));

        this.flightRegistrationPlaneBox.addItem(id);
    }//GEN-LAST:event_airplaneRegistrationCreateButtonActionPerformed

    private void locationRegistrationCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationRegistrationCreateButtonActionPerformed
        // TODO add your handling code here:
        String id = locationRegistrationAirportIDTextField.getText();
        String name = locationRegistrationAirportNameTextField.getText();
        String city = locationRegistrationAirportCityTextField.getText();
        String country = locationRegistrationAirportCountryTextField.getText();
        double latitude = Double.parseDouble(locationRegistrationAirportLatitudeTextField.getText());
        double longitude = Double.parseDouble(locationRegistrationAirportLongitudeTextField.getText());

        this.locations.add(new Location(id, name, city, country, latitude, longitude));

        this.flightRegistrationDepartureLocationBox.addItem(id);
        this.flightRegistrationArrivalLocationBox.addItem(id);
        this.flightRegistrationScaleLocationBox.addItem(id);
    }//GEN-LAST:event_locationRegistrationCreateButtonActionPerformed

    private void flightRegistrationCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightRegistrationCreateButtonActionPerformed
        // TODO add your handling code here:
        String id = flightRegistrationIDTextField.getText();
        String planeId = flightRegistrationPlaneBox.getItemAt(flightRegistrationPlaneBox.getSelectedIndex());
        String departureLocationId = flightRegistrationDepartureLocationBox.getItemAt(flightRegistrationDepartureLocationBox.getSelectedIndex());
        String arrivalLocationId = flightRegistrationArrivalLocationBox.getItemAt(flightRegistrationArrivalLocationBox.getSelectedIndex());
        String scaleLocationId = flightRegistrationScaleLocationBox.getItemAt(flightRegistrationScaleLocationBox.getSelectedIndex());
        int year = Integer.parseInt(flightRegistrationYearTextField.getText());
        int month = Integer.parseInt(flightRegistrationMonthBox.getItemAt(flightRegistrationMonthBox.getSelectedIndex()));
        int day = Integer.parseInt(flightRegistrationDayBox.getItemAt(flightRegistrationDayBox.getSelectedIndex()));
        int hour = Integer.parseInt(flightRegistrationDepartureHourBox.getItemAt(flightRegistrationDepartureHourBox.getSelectedIndex()));
        int minutes = Integer.parseInt(flightRegistrationDepartureMinuteBox.getItemAt(flightRegistrationDepartureMinuteBox.getSelectedIndex()));
        int hoursDurationsArrival = Integer.parseInt(flightRegistrationArrivalHourBox.getItemAt(flightRegistrationArrivalHourBox.getSelectedIndex()));
        int minutesDurationsArrival = Integer.parseInt(flightRegistrationArrivalMinuteBox.getItemAt(flightRegistrationArrivalMinuteBox.getSelectedIndex()));
        int hoursDurationsScale = Integer.parseInt(flightRegistrationScaleHourBox.getItemAt(flightRegistrationScaleHourBox.getSelectedIndex()));
        int minutesDurationsScale = Integer.parseInt(flightRegistrationScaleMinuteBox.getItemAt(flightRegistrationScaleMinuteBox.getSelectedIndex()));

        LocalDateTime departureDate = LocalDateTime.of(year, month, day, hour, minutes);

        Plane plane = null;
        for (Plane p : this.planes) {
            if (planeId.equals(p.getId())) {
                plane = p;
            }
        }

        Location departure = null;
        Location arrival = null;
        Location scale = null;
        for (Location location : this.locations) {
            if (departureLocationId.equals(location.getAirportId())) {
                departure = location;
            }
            if (arrivalLocationId.equals(location.getAirportId())) {
                arrival = location;
            }
            if (scaleLocationId.equals(location.getAirportId())) {
                scale = location;
            }
        }

        if (scale == null) {
            this.flights.add(new Flight(id, plane, departure, arrival, departureDate, hoursDurationsArrival, minutesDurationsArrival));
        } else {
            this.flights.add(new Flight(id, plane, departure, scale, arrival, departureDate, hoursDurationsArrival, minutesDurationsArrival, hoursDurationsScale, minutesDurationsScale));
        }

        this.addToFlightFlightBox.addItem(id);
    }//GEN-LAST:event_flightRegistrationCreateButtonActionPerformed

    private void updateInfoUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateInfoUpdateButtonActionPerformed
        // TODO add your handling code here:
        long id = Long.parseLong(updateInfoIDTextField.getText());
        String firstname = updateInfoFirstNameTextField.getText();
        String lastname = updateInfoLastNameTextField.getText();
        int year = Integer.parseInt(updateInfoYearTextField.getText());
        int month = Integer.parseInt(passengerRegistrationMonthBox.getItemAt(updateInfoMonthBox.getSelectedIndex()));
        int day = Integer.parseInt(passengerRegistrationDayBox.getItemAt(updateInfoDayBox.getSelectedIndex()));
        int phoneCode = Integer.parseInt(updateInfoPhone1TextField.getText());
        long phone = Long.parseLong(updateInfoPhone2TextField.getText());
        String country = updateInfoCountryTextField.getText();

        LocalDate birthDate = LocalDate.of(year, month, day);

        Passenger passenger = null;
        for (Passenger p : this.passengers) {
            if (p.getId() == id) {
                passenger = p;
            }
        }

        passenger.setFirstname(firstname);
        passenger.setLastname(lastname);
        passenger.setBirthDate(birthDate);
        passenger.setCountryPhoneCode(phoneCode);
        passenger.setPhone(phone);
        passenger.setCountry(country);
    }//GEN-LAST:event_updateInfoUpdateButtonActionPerformed

    private void addToFlightAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToFlightAddButtonActionPerformed
        // TODO add your handling code here:
        long passengerId = Long.parseLong(addToFlightIDTextField.getText());
        String flightId = addToFlightFlightBox.getItemAt(addToFlightFlightBox.getSelectedIndex());

        Passenger passenger = null;
        Flight flight = null;

        for (Passenger p : this.passengers) {
            if (p.getId() == passengerId) {
                passenger = p;
            }
        }

        for (Flight f : this.flights) {
            if (flightId.equals(f.getId())) {
                flight = f;
            }
        }

        passenger.addFlight(flight);
        flight.addPassenger(passenger);
    }//GEN-LAST:event_addToFlightAddButtonActionPerformed

    private void delayFlightsDelayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delayFlightsDelayButtonActionPerformed
        // TODO add your handling code here:
        String flightId = delayFlightsIDBox.getItemAt(delayFlightsIDBox.getSelectedIndex());
        int hours = Integer.parseInt(delayFlightsHourBox.getItemAt(delayFlightsHourBox.getSelectedIndex()));
        int minutes = Integer.parseInt(delayFlightsMinuteBox.getItemAt(delayFlightsMinuteBox.getSelectedIndex()));

        Flight flight = null;
        for (Flight f : this.flights) {
            if (flightId.equals(f.getId())) {
                flight = f;
            }
        }

        flight.delay(hours, minutes);
    }//GEN-LAST:event_delayFlightsDelayButtonActionPerformed

    private void showMyFlightsRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showMyFlightsRefreshButtonActionPerformed
        // TODO add your handling code here:
        long passengerId = Long.parseLong(userSelect.getItemAt(userSelect.getSelectedIndex()));

        Passenger passenger = null;
        for (Passenger p : this.passengers) {
            if (p.getId() == passengerId) {
                passenger = p;
            }
        }

        ArrayList<Flight> flights = passenger.getFlights();
        DefaultTableModel model = (DefaultTableModel) showMyFlightsTable.getModel();
        model.setRowCount(0);
        for (Flight flight : flights) {
            model.addRow(new Object[]{flight.getId(), flight.getDepartureDate(), flight.calculateArrivalDate()});
        }
    }//GEN-LAST:event_showMyFlightsRefreshButtonActionPerformed

    private void showAllPassengersRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllPassengersRefreshButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) showAllPassengersTable.getModel();
        model.setRowCount(0);
        for (Passenger passenger : this.passengers) {
            model.addRow(new Object[]{passenger.getId(), passenger.getFullname(), passenger.getBirthDate(), passenger.calculateAge(), passenger.generateFullPhone(), passenger.getCountry(), passenger.getNumFlights()});
        }
    }//GEN-LAST:event_showAllPassengersRefreshButtonActionPerformed

    private void showAllFlightsRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllFlightsRefreshButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) showAllFlightsTable.getModel();
        model.setRowCount(0);
        for (Flight flight : this.flights) {
            model.addRow(new Object[]{flight.getId(), flight.getDepartureLocation().getAirportId(), flight.getArrivalLocation().getAirportId(), (flight.getScaleLocation() == null ? "-" : flight.getScaleLocation().getAirportId()), flight.getDepartureDate(), flight.calculateArrivalDate(), flight.getPlane().getId(), flight.getNumPassengers()});
        }
    }//GEN-LAST:event_showAllFlightsRefreshButtonActionPerformed

    private void showAllPlanesRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllPlanesRefreshButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) showAllPlanesTable.getModel();
        model.setRowCount(0);
        for (Plane plane : this.planes) {
            model.addRow(new Object[]{plane.getId(), plane.getBrand(), plane.getModel(), plane.getMaxCapacity(), plane.getAirline(), plane.getNumFlights()});
        }
    }//GEN-LAST:event_showAllPlanesRefreshButtonActionPerformed

    private void showAllLocationsRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllLocationsRefreshButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) showAllLocationsTable.getModel();
        model.setRowCount(0);
        for (Location location : this.locations) {
            model.addRow(new Object[]{location.getAirportId(), location.getAirportName(), location.getAirportCity(), location.getAirportCountry()});
        }
    }//GEN-LAST:event_showAllLocationsRefreshButtonActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void userSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSelectActionPerformed
        try {
            String id = userSelect.getSelectedItem().toString();
            if (! id.equals(userSelect.getItemAt(0))) {
                updateInfoIDTextField.setText(id);
                addToFlightIDTextField.setText(id);
            }
            else{
                updateInfoIDTextField.setText("");
                addToFlightIDTextField.setText("");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_userSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        System.setProperty("flatlaf.useNativeLibrary", "false");

        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AirportFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToFlightAddButton;
    private javax.swing.JComboBox<String> addToFlightFlightBox;
    private javax.swing.JLabel addToFlightFlightLabel;
    private javax.swing.JLabel addToFlightIDLabel;
    private javax.swing.JTextField addToFlightIDTextField;
    private javax.swing.JPanel addToFlightPanel;
    private javax.swing.JPanel administrationPanel;
    private javax.swing.JRadioButton administrator;
    private javax.swing.JLabel airplaneRegistrationAirlineLabel;
    private javax.swing.JTextField airplaneRegistrationAirlineTextField;
    private javax.swing.JLabel airplaneRegistrationBrandLabel;
    private javax.swing.JTextField airplaneRegistrationBrandTextField;
    private javax.swing.JButton airplaneRegistrationCreateButton;
    private javax.swing.JLabel airplaneRegistrationIDLabel;
    private javax.swing.JTextField airplaneRegistrationIDTextField;
    private javax.swing.JLabel airplaneRegistrationMaxCapacityLabel;
    private javax.swing.JTextField airplaneRegistrationMaxCapacityTextField;
    private javax.swing.JLabel airplaneRegistrationModelLabel;
    private javax.swing.JTextField airplaneRegistrationModelTextField;
    private javax.swing.JPanel airplaneRegistrationPanel;
    private airport.PanelRound bodyPanel;
    private javax.swing.JButton delayFlightsDelayButton;
    private javax.swing.JComboBox<String> delayFlightsHourBox;
    private javax.swing.JLabel delayFlightsHoursLabel;
    private javax.swing.JComboBox<String> delayFlightsIDBox;
    private javax.swing.JLabel delayFlightsIDLabel;
    private javax.swing.JComboBox<String> delayFlightsMinuteBox;
    private javax.swing.JLabel delayFlightsMinutesLabel;
    private javax.swing.JPanel delayFlightsPanel;
    private javax.swing.JLabel flightRegistrationArrivalDuration1Label;
    private javax.swing.JLabel flightRegistrationArrivalDuration2Label;
    private javax.swing.JComboBox<String> flightRegistrationArrivalHourBox;
    private javax.swing.JComboBox<String> flightRegistrationArrivalLocationBox;
    private javax.swing.JLabel flightRegistrationArrivalLocationLabel;
    private javax.swing.JComboBox<String> flightRegistrationArrivalMinuteBox;
    private javax.swing.JButton flightRegistrationCreateButton;
    private javax.swing.JComboBox<String> flightRegistrationDayBox;
    private javax.swing.JLabel flightRegistrationDepartureDate1Label;
    private javax.swing.JLabel flightRegistrationDepartureDate2Label;
    private javax.swing.JLabel flightRegistrationDepartureDate3Label;
    private javax.swing.JLabel flightRegistrationDepartureDate4Label;
    private javax.swing.JLabel flightRegistrationDepartureDate5Label;
    private javax.swing.JComboBox<String> flightRegistrationDepartureHourBox;
    private javax.swing.JComboBox<String> flightRegistrationDepartureLocationBox;
    private javax.swing.JLabel flightRegistrationDepartureLocationLabel;
    private javax.swing.JComboBox<String> flightRegistrationDepartureMinuteBox;
    private javax.swing.JLabel flightRegistrationIDLabel;
    private javax.swing.JTextField flightRegistrationIDTextField;
    private javax.swing.JComboBox<String> flightRegistrationMonthBox;
    private javax.swing.JPanel flightRegistrationPanel;
    private javax.swing.JComboBox<String> flightRegistrationPlaneBox;
    private javax.swing.JLabel flightRegistrationPlaneLabel;
    private javax.swing.JLabel flightRegistrationScaleDuration1Label;
    private javax.swing.JLabel flightRegistrationScaleDuration2Label;
    private javax.swing.JComboBox<String> flightRegistrationScaleHourBox;
    private javax.swing.JComboBox<String> flightRegistrationScaleLocationBox;
    private javax.swing.JLabel flightRegistrationScaleLocationLabel;
    private javax.swing.JComboBox<String> flightRegistrationScaleMinuteBox;
    private javax.swing.JTextField flightRegistrationYearTextField;
    private javax.swing.JButton jButton13;
    private javax.swing.JLabel locationRegistrationAirportCityLabel;
    private javax.swing.JTextField locationRegistrationAirportCityTextField;
    private javax.swing.JLabel locationRegistrationAirportCountryLabel;
    private javax.swing.JTextField locationRegistrationAirportCountryTextField;
    private javax.swing.JLabel locationRegistrationAirportIDLabel;
    private javax.swing.JTextField locationRegistrationAirportIDTextField;
    private javax.swing.JLabel locationRegistrationAirportLatitudeLabel;
    private javax.swing.JTextField locationRegistrationAirportLatitudeTextField;
    private javax.swing.JLabel locationRegistrationAirportLongitudeLabel;
    private javax.swing.JTextField locationRegistrationAirportLongitudeTextField;
    private javax.swing.JLabel locationRegistrationAirportNameLabel;
    private javax.swing.JTextField locationRegistrationAirportNameTextField;
    private javax.swing.JButton locationRegistrationCreateButton;
    private javax.swing.JPanel locationRegistrationPanel;
    private airport.PanelRound lowerBodyPanel;
    private javax.swing.JTabbedPane mainTab;
    private javax.swing.JLabel passengerRegistrationBirthdate1Label;
    private javax.swing.JLabel passengerRegistrationBirthdate2Label;
    private javax.swing.JLabel passengerRegistrationBirthdate3Label;
    private javax.swing.JTextField passengerRegistrationCountryTextField;
    private javax.swing.JLabel passengerRegistrationCountrylabel;
    private javax.swing.JComboBox<String> passengerRegistrationDayBox;
    private javax.swing.JLabel passengerRegistrationFirstNameLabel;
    private javax.swing.JTextField passengerRegistrationFirtstNameLabel;
    private javax.swing.JLabel passengerRegistrationIDLabel;
    private javax.swing.JTextField passengerRegistrationIDTextField;
    private javax.swing.JLabel passengerRegistrationLastNameLabel;
    private javax.swing.JTextField passengerRegistrationLastNameTextField;
    private javax.swing.JComboBox<String> passengerRegistrationMonthBox;
    private javax.swing.JPanel passengerRegistrationPanel;
    private javax.swing.JLabel passengerRegistrationPhone1Label;
    private javax.swing.JTextField passengerRegistrationPhone1TextField;
    private javax.swing.JLabel passengerRegistrationPhone2Label;
    private javax.swing.JTextField passengerRegistrationPhone2TextField;
    private javax.swing.JLabel passengerRegistrationPhone3Label;
    private javax.swing.JButton passengerRegistrationRegisterButton;
    private javax.swing.JTextField passengerRegistrationYearTextField;
    private javax.swing.JPanel showAllFlightsPanel;
    private javax.swing.JButton showAllFlightsRefreshButton;
    private javax.swing.JScrollPane showAllFlightsScroll;
    private javax.swing.JTable showAllFlightsTable;
    private javax.swing.JPanel showAllLocationsPanel;
    private javax.swing.JButton showAllLocationsRefreshButton;
    private javax.swing.JScrollPane showAllLocationsScroll;
    private javax.swing.JTable showAllLocationsTable;
    private javax.swing.JPanel showAllPassengersPanel;
    private javax.swing.JButton showAllPassengersRefreshButton;
    private javax.swing.JScrollPane showAllPassengersScroll;
    private javax.swing.JTable showAllPassengersTable;
    private javax.swing.JPanel showAllPlanesPanel;
    private javax.swing.JButton showAllPlanesRefreshButton;
    private javax.swing.JScrollPane showAllPlanesScroll;
    private javax.swing.JTable showAllPlanesTable;
    private javax.swing.JPanel showMyFlightsPanel;
    private javax.swing.JButton showMyFlightsRefreshButton;
    private javax.swing.JScrollPane showMyFlightsScroll;
    private javax.swing.JTable showMyFlightsTable;
    private javax.swing.JLabel updateInfoBirthdateLabel;
    private javax.swing.JLabel updateInfoCountryLabel;
    private javax.swing.JTextField updateInfoCountryTextField;
    private javax.swing.JComboBox<String> updateInfoDayBox;
    private javax.swing.JLabel updateInfoFirstNameLabel;
    private javax.swing.JTextField updateInfoFirstNameTextField;
    private javax.swing.JLabel updateInfoIDLabel;
    private javax.swing.JTextField updateInfoIDTextField;
    private javax.swing.JLabel updateInfoLastNameLabel;
    private javax.swing.JTextField updateInfoLastNameTextField;
    private javax.swing.JComboBox<String> updateInfoMonthBox;
    private javax.swing.JPanel updateInfoPanel;
    private javax.swing.JLabel updateInfoPhone1Label;
    private javax.swing.JTextField updateInfoPhone1TextField;
    private javax.swing.JLabel updateInfoPhone2Label;
    private javax.swing.JTextField updateInfoPhone2TextField;
    private javax.swing.JLabel updateInfoPhone3Label;
    private javax.swing.JButton updateInfoUpdateButton;
    private javax.swing.JTextField updateInfoYearTextField;
    private airport.PanelRound upperBodyPanel;
    private javax.swing.JRadioButton user;
    private javax.swing.JComboBox<String> userSelect;
    // End of variables declaration//GEN-END:variables
}
